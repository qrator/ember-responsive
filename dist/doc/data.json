{
    "project": {
        "name": "ember-responsive",
        "description": "Easy responsive layouts with Ember",
        "version": "0.2.14",
        "url": "https://freshbooks.github.io/ember-responsive/"
    },
    "files": {
        "lib/initializer.js": {
            "name": "lib/initializer.js",
            "modules": {},
            "classes": {
                "Ember.Application.initializer": 1
            },
            "fors": {},
            "namespaces": {
                "Ember.Application": 1
            }
        },
        "lib/media.js": {
            "name": "lib/media.js",
            "modules": {},
            "classes": {
                "Ember.Responsive.Media": 1
            },
            "fors": {},
            "namespaces": {
                "Ember.Responsive": 1
            }
        },
        "lib/responsive.js": {
            "name": "lib/responsive.js",
            "modules": {
                "ember-responsive": 1
            },
            "classes": {
                "Ember.Application.responsive": 1
            },
            "fors": {},
            "namespaces": {
                "Ember.Application": 1
            }
        }
    },
    "modules": {
        "ember-responsive": {
            "name": "ember-responsive",
            "submodules": {},
            "classes": {
                "Ember.Application.initializer": 1,
                "Ember.Responsive.Media": 1,
                "Ember.Application.responsive": 1
            },
            "fors": {},
            "namespaces": {
                "Ember.Application": 1,
                "Ember.Responsive": 1
            },
            "tag": "main",
            "file": "lib/responsive.js",
            "line": 10,
            "description": "The main namespace for `Ember.Responsive`.",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "matchers",
                    "description": "A hash of media queries to test.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An Ember initializer.",
                "type": "Object"
            },
            "extends": "Ember.Object",
            "itemtype": "main"
        }
    },
    "classes": {
        "Ember.Application.initializer": {
            "name": "Ember.Application.initializer",
            "shortname": "Ember.Application.initializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-responsive",
            "namespace": "Ember.Application",
            "file": "lib/initializer.js",
            "line": 2,
            "description": "An initializer that sets up `Ember.Responsive`.\n\nRefer to {{#crossLink \"Ember.Application.responsive\"}}{{/crossLink}}\nfor examples of how to configure this library before the initializer\nbefore it's run by Ember.",
            "static": 1,
            "is_constructor": 1
        },
        "Ember.Responsive.Media": {
            "name": "Ember.Responsive.Media",
            "shortname": "Ember.Responsive.Media",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-responsive",
            "namespace": "Ember.Responsive",
            "file": "lib/media.js",
            "line": 2,
            "description": "Handles detecting and responding to media queries.\n\nGenerally speaking, you won't ever need to create an instance of this class\nyourself, since `Ember.Responsive` takes care of creating and configuring it\nfor you. However, it is important to document how to interact with this\nclassâ€”which can become important during test time in particular. With that\nsaid, let's take a look at how to work with it.\n\n**Adding media query matchers**\n\nThe first step to using the class is to add media queries that you\nwant it to listen to. Each media query has a name that you can\nuse to reference it by.\n\n```javascript\nmedia = Ember.Responsive.Media.create();\nmedia.match('mobile', '(max-width: 768px)');\nmedia.match('desktop', '(min-width: 769px)');\n```\n\n**Testing the media query matchers**\n\nNow that you've added a few matchers, you can access those media queries as\nif they were properties on your object. The nice thing is that whenever the\nmedia queries change, this class will automatically update the relevant\nproperties (and so will the rest of your application, thanks to the power\nof two-way data-binding).\n\n```javascript\nmedia = Ember.Responsive.Media.create();\nmedia.match('mobile', '(max-width: 768px)');\nmedia.match('desktop', '(min-width: 769px)');\n\n// There are convenient \"isser\" properties defined...\nif (media.get('isMobile')) {\n  console.log('mobile!');\n}\n\n// As well as access to the matchMedia API...\nif (media.get('desktop.matches')) {\n  console.log('desktop!');\n}\n```\n\n**Retrieving a list of matching media queries**\n\nIt's also nice to be able to see which media queries are matching, since\nsome applications might have many matches at the same time.\n\n```javascript\nmedia = Ember.Responsive.Media.create();\nmedia.match('desktop', 'all');\nmedia.match('mobile', 'all');\n\nconsole.log(media.get('matches'));\n// => Ember.Set(['desktop', 'mobile']);\n```\n\nThis class can also return that list as a string of dasherized class names,\nwhich is useful for placing on your app's rootElement. By default, these\nclass names are prefixed with `media-`, so as not to clash with any other\nclasses your app might use.\n\n```javascript\nApp.ApplicationView = Ember.View.extend({\n  classNameBindings: ['media.classNames']\n});\n```"
        },
        "Ember.Application.responsive": {
            "name": "Ember.Application.responsive",
            "shortname": "Ember.Application.responsive",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-responsive",
            "namespace": "Ember.Application",
            "file": "lib/responsive.js",
            "line": 10,
            "description": "This is the main entry point to `Ember.Responsive`, and all it does\nis take care of configuring this library to your specifications before\nspinning up your Ember app.\n\n**Setting media for your application**\n\nPresently, you can easily configure your application's breakpoints\nusing media queries.\n\n```javascript\nvar App = Ember.Application.extend();\n\n// Declare the media that we care about.\nApp.responsive({\n  media: {\n    mobile:  '(max-width: 768px)',\n    tablet:  '(min-width: 769px) and (max-width: 992px)',\n    desktop: '(min-width: 993px) and (max-width: 1200px)',\n    jumbo:   '(min-width: 1201px)',\n  }\n});\n```\n\nAfter you've gone through this process, you'll be able to access\nthe media queries in a few different places of your application:\n\n  - All controllers, under the name `media`.\n  - All components, under the name `media`.\n  - All views, under the name `media`.\n  - All routes, under the name `media`.\n  - In the container, under the name `responsive:media`.\n\n**Binding media classes to your application view**\n\n`Ember.Responsive` makes it very easy to bind the active media queries as\nclass names on your app view (or any view, for that matter). This helps you\navoid having to duplicate media queries in your CSS and Ember code, and\nmakes writing responsive CSS much simpler.\n\n```javascript\nApp.ApplicationView = Ember.View.extend({\n  classNameBindings: ['media.classNames']\n});\n```\n\n**Referencing media queries in your app**\n\n`Ember.Responsive` also allows access to its API in controllers, components,\nroutes, and views, making it dead simple to only perform certain types of\nwork for certain devices.\n\n```javascript\nApp.PostsRoute = Ember.Router.extend({\n  model: function() {\n    if (this.get('media.isMobile')) {\n      // Return a smaller, less data-hungry result\n    }\n  }\n});\n```\n\n**Referencing media queries in your templates**\n\nSince media queries are available in your controllers, components,\nand views, they'll also be accessible in your templates.\n\n```handlebars\n\\{{#if media.isMobile}}\n   Mobile view!\n\\{{/if}}\n```\n\n**Mocking a particular media type in test**\n\nIt's very easy to fake a particular view when testing as well. This\nis useful when you want to be able to test different behaviours\nfor different types of devices.\n\nIf you're writing an integration test, you'll probably want to mock\nout the media type at the application level.\n\n```javascript\nApp.responsive({\n  media: {\n    mobile: 'all' // The 'all' media query will always match\n  }\n});\n```\n\nBut in unit tests, you can simply override the property that you're\nreferencing.\n\n```javascript\ncontroller.set('media.isMobile', true);\n```\n\nRefer to the {{#crossLink \"Ember.Responsive.Media\"}}{{/crossLink}}\ndocumentation for more examples of how to interact with the\naforementioned `media` object.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "lib/initializer.js",
            "line": 18,
            "itemtype": "property",
            "name": "name",
            "type": "string",
            "default": "responsive",
            "class": "Ember.Application.initializer",
            "module": "ember-responsive",
            "namespace": "Ember.Application"
        },
        {
            "file": "lib/initializer.js",
            "line": 25,
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "Ember.Application",
                    "description": "app"
                }
            ],
            "class": "Ember.Application.initializer",
            "module": "ember-responsive",
            "namespace": "Ember.Application"
        },
        {
            "file": "lib/media.js",
            "line": 78,
            "description": "A set of matching matchers.",
            "itemtype": "property",
            "name": "matches",
            "type": "Ember.NativeArray",
            "default": "Ember.NativeArray",
            "class": "Ember.Responsive.Media",
            "module": "ember-responsive",
            "namespace": "Ember.Responsive"
        },
        {
            "file": "lib/media.js",
            "line": 89,
            "description": "A hash of listeners indexed by their matcher's names",
            "itemtype": "property",
            "name": "",
            "type": "Object",
            "class": "Ember.Responsive.Media",
            "module": "ember-responsive",
            "namespace": "Ember.Responsive"
        },
        {
            "file": "lib/media.js",
            "line": 97,
            "description": "The matcher to use for testing media queries.",
            "itemtype": "property",
            "name": "matcher",
            "type": "matchMedia",
            "default": "window.matchMedia",
            "access": "private",
            "tagname": "",
            "class": "Ember.Responsive.Media",
            "module": "ember-responsive",
            "namespace": "Ember.Responsive"
        },
        {
            "file": "lib/media.js",
            "line": 107,
            "description": "A string composed of all the matching matchers' names, turned into\nfriendly, dasherized class-names that are prefixed with `media-`.",
            "itemtype": "property",
            "name": "classNames",
            "type": "string",
            "class": "Ember.Responsive.Media",
            "module": "ember-responsive",
            "namespace": "Ember.Responsive"
        },
        {
            "file": "lib/media.js",
            "line": 121,
            "description": "Adds a new matcher to the list.\n\nAfter this method is called, you will be able to access the result\nof the matcher as a property on this object.\n\n**Adding a new matcher**\n\n```javascript\nmedia = Ember.Responsive.Media.create();\nmedia.match('all', 'all');\nmedia.get('all');\n  // => instanceof window.matchMedia\nmedia.get('all.matches');\n  // => true\n```",
            "params": [
                {
                    "name": "string",
                    "description": "name   The name of the matcher"
                },
                {
                    "name": "string",
                    "description": "query  The media query to match against"
                }
            ],
            "itemtype": "method",
            "name": "match",
            "class": "Ember.Responsive.Media",
            "module": "ember-responsive",
            "namespace": "Ember.Responsive"
        }
    ],
    "warnings": []
}